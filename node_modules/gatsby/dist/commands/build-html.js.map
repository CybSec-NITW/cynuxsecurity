{"version":3,"sources":["../../src/commands/build-html.ts"],"names":["oldHash","newHash","runWebpack","compilerConfig","stage","directory","Bluebird","resolve","reject","process","env","GATSBY_EXPERIMENTAL_DEV_SSR","run","err","stats","watch","ignored","hash","restartWorker","require","doBuildRenderer","webpackConfig","hasErrors","reporter","panic","compilation","errors","buildRenderer","program","parentSpan","config","deleteRenderer","rendererPath","fs","remove","e","renderHTMLQueue","workerPool","activity","htmlComponentRendererPath","pages","envVars","NODE_ENV","gatsby_executing_command","gatsby_log_level","segments","map","pageSegment","renderHTML","paths","tick","length","BuildHTMLError","Error","constructor","error","message","codeFrame","Object","getOwnPropertyNames","forEach","key","doBuildPages","pagePaths","telemetry","addSiteMeasurement","pagesCount","prettyError","stack","buildError","context","buildHTML","span"],"mappings":"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","sourcesContent":["import Bluebird from \"bluebird\"\nimport fs from \"fs-extra\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { createErrorFromString } from \"gatsby-cli/lib/reporter/errors\"\nimport telemetry from \"gatsby-telemetry\"\nimport { chunk } from \"lodash\"\nimport webpack from \"webpack\"\n\nimport webpackConfig from \"../utils/webpack.config\"\nimport { structureWebpackErrors } from \"../utils/webpack-error-utils\"\n\nimport { IProgram, Stage } from \"./types\"\n\ntype IActivity = any // TODO\ntype IWorkerPool = any // TODO\n\nlet oldHash = ``\nlet newHash = ``\nconst runWebpack = (\n  compilerConfig,\n  stage: Stage,\n  directory\n): Bluebird<webpack.Stats> =>\n  new Bluebird((resolve, reject) => {\n    if (!process.env.GATSBY_EXPERIMENTAL_DEV_SSR || stage === `build-html`) {\n      webpack(compilerConfig).run((err, stats) => {\n        if (err) {\n          return reject(err)\n        } else {\n          return resolve(stats)\n        }\n      })\n    } else if (\n      process.env.GATSBY_EXPERIMENTAL_DEV_SSR &&\n      stage === `develop-html`\n    ) {\n      webpack(compilerConfig).watch(\n        {\n          ignored: /node_modules/,\n        },\n        (err, stats) => {\n          if (err) {\n            return reject(err)\n          } else {\n            newHash = stats.hash || ``\n\n            const {\n              restartWorker,\n            } = require(`../utils/dev-ssr/render-dev-html`)\n            // Make sure we use the latest version during development\n            if (oldHash !== `` && newHash !== oldHash) {\n              restartWorker(`${directory}/public/render-page.js`)\n            }\n\n            oldHash = newHash\n\n            return resolve(stats)\n          }\n        }\n      )\n    }\n  })\n\nconst doBuildRenderer = async (\n  { directory }: IProgram,\n  webpackConfig: webpack.Configuration,\n  stage: Stage\n): Promise<string> => {\n  const stats = await runWebpack(webpackConfig, stage, directory)\n  if (stats.hasErrors()) {\n    reporter.panic(structureWebpackErrors(stage, stats.compilation.errors))\n  }\n\n  // render-page.js is hard coded in webpack.config\n  return `${directory}/public/render-page.js`\n}\n\nexport const buildRenderer = async (\n  program: IProgram,\n  stage: Stage,\n  parentSpan?: IActivity\n): Promise<string> => {\n  const { directory } = program\n  const config = await webpackConfig(program, directory, stage, null, {\n    parentSpan,\n  })\n\n  return doBuildRenderer(program, config, stage)\n}\n\nconst deleteRenderer = async (rendererPath: string): Promise<void> => {\n  try {\n    await fs.remove(rendererPath)\n    await fs.remove(`${rendererPath}.map`)\n  } catch (e) {\n    // This function will fail on Windows with no further consequences.\n  }\n}\n\nconst renderHTMLQueue = async (\n  workerPool: IWorkerPool,\n  activity: IActivity,\n  htmlComponentRendererPath: string,\n  pages: Array<string>\n): Promise<void> => {\n  // We need to only pass env vars that are set programmatically in gatsby-cli\n  // to child process. Other vars will be picked up from environment.\n  const envVars = [\n    [`NODE_ENV`, process.env.NODE_ENV],\n    [`gatsby_executing_command`, process.env.gatsby_executing_command],\n    [`gatsby_log_level`, process.env.gatsby_log_level],\n  ]\n\n  const segments = chunk(pages, 50)\n\n  await Bluebird.map(segments, async pageSegment => {\n    await workerPool.renderHTML({\n      envVars,\n      htmlComponentRendererPath,\n      paths: pageSegment,\n    })\n\n    if (activity && activity.tick) {\n      activity.tick(pageSegment.length)\n    }\n  })\n}\n\nclass BuildHTMLError extends Error {\n  codeFrame = ``\n  context?: {\n    path: string\n  }\n\n  constructor(error: Error) {\n    super(error.message)\n\n    // We must use getOwnProperty because keys like `stack` are not enumerable,\n    // but we want to copy over the entire error\n    Object.getOwnPropertyNames(error).forEach(key => {\n      this[key] = error[key]\n    })\n  }\n}\n\nconst doBuildPages = async (\n  rendererPath: string,\n  pagePaths: Array<string>,\n  activity: IActivity,\n  workerPool: IWorkerPool\n): Promise<void> => {\n  telemetry.addSiteMeasurement(`BUILD_END`, {\n    pagesCount: pagePaths.length,\n  })\n\n  try {\n    await renderHTMLQueue(workerPool, activity, rendererPath, pagePaths)\n  } catch (error) {\n    const prettyError = await createErrorFromString(\n      error.stack,\n      `${rendererPath}.map`\n    )\n    const buildError = new BuildHTMLError(prettyError)\n    buildError.context = error.context\n    throw buildError\n  }\n}\n\nexport const buildHTML = async ({\n  program,\n  stage,\n  pagePaths,\n  activity,\n  workerPool,\n}: {\n  program: IProgram\n  stage: Stage\n  pagePaths: Array<string>\n  activity: IActivity\n  workerPool: IWorkerPool\n}): Promise<void> => {\n  const rendererPath = await buildRenderer(program, stage, activity.span)\n  await doBuildPages(rendererPath, pagePaths, activity, workerPool)\n  if (stage !== `develop-html`) {\n    await deleteRenderer(rendererPath)\n  }\n}\n"],"file":"build-html.js"}