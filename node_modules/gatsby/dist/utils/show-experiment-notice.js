"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.showExperimentNoticeAfterTimeout = showExperimentNoticeAfterTimeout;

var _gatsbyCoreUtils = require("gatsby-core-utils");

var _reporter = _interopRequireDefault(require("gatsby-cli/lib/reporter"));

const ONE_DAY = 24 * 60 * 60 * 1000;

function showExperimentNoticeAfterTimeout(experimentIdentifier, noticeText, showNoticeAfterMs, minimumIntervalBetweenNoticesMs = ONE_DAY) {
  const configStoreKey = `lastExperimentNotice.${experimentIdentifier}`;
  const lastTimeWeShowedNotice = (0, _gatsbyCoreUtils.getConfigStore)().get(configStoreKey);

  if (lastTimeWeShowedNotice) {
    if (Date.now() - lastTimeWeShowedNotice < minimumIntervalBetweenNoticesMs) {
      return undefined;
    }
  }

  const noticeTimeout = setTimeout(() => {
    _reporter.default.info(`\n\n${noticeText}\n\n`);

    (0, _gatsbyCoreUtils.getConfigStore)().set(configStoreKey, Date.now());
  }, showNoticeAfterMs);
  return function clearNoticeTimeout() {
    clearTimeout(noticeTimeout);
  };
}
//# sourceMappingURL=show-experiment-notice.js.map