{"version":3,"sources":["../../src/utils/start-server.ts"],"names":["startServer","program","app","workerPool","WorkerPool","create","directory","webpackActivity","report","activityTimer","id","start","THIRTY_SECONDS","cancelDevJSNotice","process","env","gatsby_executing_command","GATSBY_EXPERIMENTAL_PRESERVE_WEBPACK_CACHE","stripIndent","directoryPath","buildHTML","require","createIndexHtml","activity","stage","Stage","DevelopHTML","pagePaths","err","name","panic","indexHTMLActivity","phantomActivity","GATSBY_EXPERIMENTAL_DEV_SSR","buildRenderer","initDevWorkerPool","end","devConfig","port","parentSpan","span","compiler","use","telemetry","expressMiddleware","log","path","heartbeat","graphqlEndpoint","GATSBY_GRAPHQL_IDE","get","endpoint","schema","schemaCustomization","store","getState","composer","Error","graphiql","extensions","enableRefresh","ENABLE_GATSBY_REFRESH_ENDPOINT","refreshToken","GATSBY_REFRESH_TOKEN","context","schemaComposer","customContext","customFormatErrorFn","stack","split","REFRESH_ENDPOINT","refresh","req","emitter","emit","webhookBody","body","express","json","post","res","authorizedRefresh","headers","authorization","query","fileName","lineNumber","next","requestedPagePath","params","pagePath","potentialPagePath","page","pageData","GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND","join","status","send","e","error","index","webpackDevMiddlewareInstance","logLevel","publicPath","output","watchOptions","devServer","stats","serverSideRender","webpackStats","compilation","modules","locals","emptyResponse","codeFrame","sourcePosition","sourceContent","moduleId","parseInt","columnNumber","fileModule","find","m","sourceMap","_source","_sourceMap","position","line","column","result","sourceLine","sourceColumn","highlightCode","developMiddleware","config","proxy","forEach","prefix","url","proxiedUrl","originalUrl","host","method","pipe","got","stream","decompress","on","response","writeHead","statusCode","_","message","sendStatus","deferNodeMutation","route","fullUrl","protocol","endsWith","webpackCompilationHash","renderDevHTML","renderResponse","undefined","htmlComponentRendererPath","sendFile","server","http","Server","socket","websocketManager","init","listener","listen","chokidar","slash","watchGlobs","map","watch","to","webpackWatching","watching"],"mappings":"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","sourcesContent":["import webpackHotMiddleware from \"webpack-hot-middleware\"\nimport webpackDevMiddleware, {\n  WebpackDevMiddleware,\n} from \"webpack-dev-middleware\"\nimport got from \"got\"\nimport webpack from \"webpack\"\nimport express from \"express\"\nimport compression from \"compression\"\nimport graphqlHTTP from \"express-graphql\"\nimport graphqlPlayground from \"graphql-playground-middleware-express\"\nimport graphiqlExplorer from \"gatsby-graphiql-explorer\"\nimport { formatError } from \"graphql\"\nimport { isCI } from \"gatsby-core-utils\"\nimport http from \"http\"\nimport https from \"https\"\nimport cors from \"cors\"\nimport telemetry from \"gatsby-telemetry\"\nimport launchEditor from \"react-dev-utils/launchEditor\"\nimport { codeFrameColumns } from \"@babel/code-frame\"\n\nimport { withBasePath } from \"../utils/path\"\nimport webpackConfig from \"../utils/webpack.config\"\nimport { store, emitter } from \"../redux\"\nimport report from \"gatsby-cli/lib/reporter\"\nimport * as WorkerPool from \"../utils/worker/pool\"\n\nimport { developStatic } from \"../commands/develop-static\"\nimport withResolverContext from \"../schema/context\"\nimport { websocketManager, WebsocketManager } from \"../utils/websocket-manager\"\nimport {\n  showExperimentNoticeAfterTimeout,\n  CancelExperimentNoticeCallbackOrUndefined,\n} from \"../utils/show-experiment-notice\"\nimport {\n  reverseFixedPagePath,\n  readPageData,\n  IPageDataWithQueryResult,\n} from \"./page-data\"\nimport { getPageData as getPageDataExperimental } from \"./get-page-data\"\nimport { findPageByPath } from \"./find-page-by-path\"\nimport apiRunnerNode from \"../utils/api-runner-node\"\nimport { Express } from \"express\"\nimport * as path from \"path\"\n\nimport { Stage, IProgram } from \"../commands/types\"\nimport JestWorker from \"jest-worker\"\nimport { findOriginalSourcePositionAndContent } from \"./stack-trace-utils\"\nimport { appendPreloadHeaders } from \"./develop-preload-headers\"\n\ntype ActivityTracker = any // TODO: Replace this with proper type once reporter is typed\n\ninterface IServer {\n  compiler: webpack.Compiler\n  listener: http.Server | https.Server\n  webpackActivity: ActivityTracker\n  cancelDevJSNotice: CancelExperimentNoticeCallbackOrUndefined\n  websocketManager: WebsocketManager\n  workerPool: JestWorker\n  webpackWatching: IWebpackWatchingPauseResume\n}\n\nexport interface IWebpackWatchingPauseResume extends webpack.Watching {\n  suspend: () => void\n  resume: () => void\n}\n\n// context seems to be public, but not documented API\n// see https://github.com/webpack/webpack-dev-middleware/issues/656\ntype PatchedWebpackDevMiddleware = WebpackDevMiddleware &\n  express.RequestHandler & {\n    context: {\n      watching: IWebpackWatchingPauseResume\n    }\n  }\n\nexport async function startServer(\n  program: IProgram,\n  app: Express,\n  workerPool: JestWorker = WorkerPool.create()\n): Promise<IServer> {\n  const directory = program.directory\n\n  const webpackActivity = report.activityTimer(`Building development bundle`, {\n    id: `webpack-develop`,\n  })\n  webpackActivity.start()\n\n  const THIRTY_SECONDS = 30 * 1000\n  let cancelDevJSNotice: CancelExperimentNoticeCallbackOrUndefined\n  if (\n    process.env.gatsby_executing_command === `develop` &&\n    !process.env.GATSBY_EXPERIMENTAL_PRESERVE_WEBPACK_CACHE &&\n    !isCI()\n  ) {\n    cancelDevJSNotice = showExperimentNoticeAfterTimeout(\n      `PRESERVE_WEBPACK_CACHE`,\n      report.stripIndent(`\nYour friendly Gatsby maintainers detected your site has more JavaScript than most sites! We're working to make your site's JS compile as quickly as possible by avoiding clearing your webpack cache as often.\n\nIf you're interested in trialing this coming change *today* — which should make your local development experience faster — go ahead and enable the PRESERVE_WEBPACK_CACHE flag and run your develop server again.\n\nTo do so, add to your gatsby-config.js:\n\nflags: {\n  PRESERVE_WEBPACK_CACHE: true,\n}\n\nVisit the umbrella issue to learn more: https://github.com/gatsbyjs/gatsby/discussions/28331\n      `),\n      THIRTY_SECONDS\n    )\n  }\n\n  // Remove the following when merging GATSBY_EXPERIMENTAL_DEV_SSR\n  const directoryPath = withBasePath(directory)\n  const { buildHTML } = require(`../commands/build-html`)\n  const createIndexHtml = async (activity: ActivityTracker): Promise<void> => {\n    try {\n      await buildHTML({\n        program,\n        stage: Stage.DevelopHTML,\n        pagePaths: [`/`],\n        workerPool,\n        activity,\n      })\n    } catch (err) {\n      if (err.name !== `WebpackError`) {\n        report.panic(err)\n        return\n      }\n      report.panic(\n        report.stripIndent`\n          There was an error compiling the html.js component for the development server.\n          See our docs page on debugging HTML builds for help https://gatsby.dev/debug-html\n        `,\n        err\n      )\n    }\n  }\n  const indexHTMLActivity = report.phantomActivity(`building index.html`, {})\n\n  if (process.env.GATSBY_EXPERIMENTAL_DEV_SSR) {\n    const { buildRenderer } = require(`../commands/build-html`)\n    await buildRenderer(program, Stage.DevelopHTML)\n    const { initDevWorkerPool } = require(`./dev-ssr/render-dev-html`)\n    initDevWorkerPool()\n  } else {\n    indexHTMLActivity.start()\n\n    await createIndexHtml(indexHTMLActivity)\n\n    indexHTMLActivity.end()\n  }\n\n  const devConfig = await webpackConfig(\n    program,\n    directory,\n    `develop`,\n    program.port,\n    { parentSpan: webpackActivity.span }\n  )\n\n  const compiler = webpack(devConfig)\n\n  /**\n   * Set up the express app.\n   **/\n  app.use(compression())\n  app.use(telemetry.expressMiddleware(`DEVELOP`))\n  app.use(\n    webpackHotMiddleware(compiler, {\n      log: false,\n      path: `/__webpack_hmr`,\n      heartbeat: 10 * 1000,\n    })\n  )\n\n  app.use(cors())\n\n  /**\n   * Pattern matching all endpoints with graphql or graphiql with 1 or more leading underscores\n   */\n  const graphqlEndpoint = `/_+graphi?ql`\n\n  if (process.env.GATSBY_GRAPHQL_IDE === `playground`) {\n    app.get(\n      graphqlEndpoint,\n      graphqlPlayground({\n        endpoint: `/___graphql`,\n      }),\n      () => {}\n    )\n  } else {\n    graphiqlExplorer(app, {\n      graphqlEndpoint,\n    })\n  }\n\n  app.use(\n    graphqlEndpoint,\n    graphqlHTTP(\n      (): graphqlHTTP.OptionsData => {\n        const { schema, schemaCustomization } = store.getState()\n\n        if (!schemaCustomization.composer) {\n          throw new Error(\n            `A schema composer was not created in time. This is likely a gatsby bug. If you experienced this please create an issue.`\n          )\n        }\n        return {\n          schema,\n          graphiql: false,\n          extensions(): { [key: string]: unknown } {\n            return {\n              enableRefresh: process.env.ENABLE_GATSBY_REFRESH_ENDPOINT,\n              refreshToken: process.env.GATSBY_REFRESH_TOKEN,\n            }\n          },\n          context: withResolverContext({\n            schema,\n            schemaComposer: schemaCustomization.composer,\n            context: {},\n            customContext: schemaCustomization.context,\n          }),\n          customFormatErrorFn(err): unknown {\n            return {\n              ...formatError(err),\n              stack: err.stack ? err.stack.split(`\\n`) : [],\n            }\n          },\n        }\n      }\n    )\n  )\n\n  /**\n   * Refresh external data sources.\n   * This behavior is disabled by default, but the ENABLE_GATSBY_REFRESH_ENDPOINT env var enables it\n   * If no GATSBY_REFRESH_TOKEN env var is available, then no Authorization header is required\n   **/\n  const REFRESH_ENDPOINT = `/__refresh`\n  const refresh = async (req: express.Request): Promise<void> => {\n    emitter.emit(`WEBHOOK_RECEIVED`, {\n      webhookBody: req.body,\n    })\n  }\n  app.use(REFRESH_ENDPOINT, express.json())\n  app.post(REFRESH_ENDPOINT, (req, res) => {\n    const enableRefresh = process.env.ENABLE_GATSBY_REFRESH_ENDPOINT\n    const refreshToken = process.env.GATSBY_REFRESH_TOKEN\n    const authorizedRefresh =\n      !refreshToken || req.headers.authorization === refreshToken\n\n    if (enableRefresh && authorizedRefresh) {\n      refresh(req)\n    }\n    res.end()\n  })\n\n  app.get(`/__open-stack-frame-in-editor`, (req, res) => {\n    launchEditor(req.query.fileName, req.query.lineNumber)\n    res.end()\n  })\n\n  app.get(\n    `/page-data/:pagePath(*)/page-data.json`,\n    async (req, res, next): Promise<void> => {\n      const requestedPagePath = req.params.pagePath\n      if (!requestedPagePath) {\n        next()\n        return\n      }\n\n      const potentialPagePath = reverseFixedPagePath(requestedPagePath)\n      const page = findPageByPath(store.getState(), potentialPagePath, false)\n\n      if (page) {\n        try {\n          const pageData: IPageDataWithQueryResult = process.env\n            .GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND\n            ? await getPageDataExperimental(page.path)\n            : await readPageData(\n                path.join(store.getState().program.directory, `public`),\n                page.path\n              )\n\n          res.status(200).send(pageData)\n          return\n        } catch (e) {\n          report.error(\n            `Error loading a result for the page query in \"${requestedPagePath}\" / \"${potentialPagePath}\". Query was not run and no cached result was found.`,\n            e\n          )\n        }\n      }\n\n      res.status(404).send({\n        path: potentialPagePath,\n      })\n    }\n  )\n\n  // Disable directory indexing i.e. serving index.html from a directory.\n  // This can lead to serving stale html files during development.\n  //\n  // We serve by default an empty index.html that sets up the dev environment.\n  app.use(developStatic(`public`, { index: false }))\n\n  const webpackDevMiddlewareInstance = (webpackDevMiddleware(compiler, {\n    logLevel: `silent`,\n    publicPath: devConfig.output.publicPath,\n    watchOptions: devConfig.devServer ? devConfig.devServer.watchOptions : null,\n    stats: `errors-only`,\n    serverSideRender: true,\n  }) as unknown) as PatchedWebpackDevMiddleware\n\n  app.use(webpackDevMiddlewareInstance)\n\n  app.get(`/__original-stack-frame`, async (req, res) => {\n    const {\n      webpackStats: {\n        compilation: { modules },\n      },\n    } = res.locals\n    const emptyResponse = {\n      codeFrame: `No codeFrame could be generated`,\n      sourcePosition: null,\n      sourceContent: null,\n    }\n\n    const moduleId = req?.query?.moduleId\n    const lineNumber = parseInt(req.query.lineNumber, 10)\n    const columnNumber = parseInt(req.query.columnNumber, 10)\n\n    const fileModule = modules.find(m => m.id === moduleId)\n    const sourceMap = fileModule?._source?._sourceMap\n\n    if (!sourceMap) {\n      res.json(emptyResponse)\n      return\n    }\n\n    const position = { line: lineNumber, column: columnNumber }\n    const result = await findOriginalSourcePositionAndContent(\n      sourceMap,\n      position\n    )\n\n    const sourcePosition = result?.sourcePosition\n    const sourceLine = sourcePosition?.line\n    const sourceColumn = sourcePosition?.column\n    const sourceContent = result?.sourceContent\n\n    if (!sourceContent || !sourceLine) {\n      res.json(emptyResponse)\n      return\n    }\n\n    const codeFrame = codeFrameColumns(\n      sourceContent,\n      {\n        start: {\n          line: sourceLine,\n          column: sourceColumn ?? 0,\n        },\n      },\n      {\n        highlightCode: true,\n      }\n    )\n    res.json({\n      codeFrame,\n      sourcePosition,\n      sourceContent,\n    })\n  })\n\n  // Expose access to app for advanced use cases\n  const { developMiddleware } = store.getState().config\n\n  if (developMiddleware) {\n    developMiddleware(app, program)\n  }\n\n  // Set up API proxy.\n  const { proxy } = store.getState().config\n  if (proxy) {\n    proxy.forEach(({ prefix, url }) => {\n      app.use(`${prefix}/*`, (req, res) => {\n        const proxiedUrl = url + req.originalUrl\n        const {\n          // remove `host` from copied headers\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          headers: { host, ...headers },\n          method,\n        } = req\n        req\n          .pipe(\n            got\n              .stream(proxiedUrl, { headers, method, decompress: false })\n              .on(`response`, response =>\n                res.writeHead(response.statusCode || 200, response.headers)\n              )\n              .on(`error`, (err, _, response) => {\n                if (response) {\n                  res.writeHead(response.statusCode || 400, response.headers)\n                } else {\n                  const message = `Error when trying to proxy request \"${req.originalUrl}\" to \"${proxiedUrl}\"`\n\n                  report.error(message, err)\n                  res.sendStatus(500)\n                }\n              })\n          )\n          .pipe(res)\n      })\n    }, cors())\n  }\n\n  await apiRunnerNode(`onCreateDevServer`, { app, deferNodeMutation: true })\n\n  // In case nothing before handled hot-update - send 404.\n  // This fixes \"Unexpected token < in JSON at position 0\" runtime\n  // errors after restarting development server and\n  // cause automatic hard refresh in the browser.\n  app.use(/.*\\.hot-update\\.json$/i, (_, res) => {\n    res.status(404).end()\n  })\n\n  // Render an HTML page and serve it.\n  if (process.env.GATSBY_EXPERIMENTAL_DEV_SSR) {\n    // Setup HTML route.\n    const { route } = require(`./dev-ssr/develop-html-route`)\n    route({ app, program, store })\n  }\n\n  app.use(async (req, res) => {\n    const fullUrl = req.protocol + `://` + req.get(`host`) + req.originalUrl\n    // This isn't used in development.\n    if (fullUrl.endsWith(`app-data.json`)) {\n      res.json({ webpackCompilationHash: `123` })\n      // If this gets here, it's a non-existant file so just send back 404.\n    } else if (fullUrl.endsWith(`.json`)) {\n      res.json({}).status(404)\n    } else {\n      await appendPreloadHeaders(req.path, res)\n\n      if (process.env.GATSBY_EXPERIMENTAL_DEV_SSR) {\n        try {\n          const { renderDevHTML } = require(`./dev-ssr/render-dev-html`)\n          const renderResponse = await renderDevHTML({\n            path: `/dev-404-page/`,\n            // Let renderDevHTML figure it out.\n            page: undefined,\n            store,\n            htmlComponentRendererPath: `${program.directory}/public/render-page.js`,\n            directory: program.directory,\n          })\n          const status = process.env.GATSBY_EXPERIMENTAL_DEV_SSR ? 404 : 200\n          res.status(status).send(renderResponse)\n        } catch (e) {\n          report.error(e)\n          res.send(e).status(500)\n        }\n      } else {\n        res.sendFile(directoryPath(`public/index.html`), err => {\n          if (err) {\n            res.status(500).end()\n          }\n        })\n      }\n    }\n  })\n\n  /**\n   * Set up the HTTP server and socket.io.\n   **/\n  const server = new http.Server(app)\n\n  const socket = websocketManager.init({ server })\n\n  // hardcoded `localhost`, because host should match `target` we set\n  // in http proxy in `develop-proxy`\n  const listener = server.listen(program.port, `localhost`)\n\n  if (!process.env.GATSBY_EXPERIMENTAL_DEV_SSR) {\n    const chokidar = require(`chokidar`)\n    const { slash } = require(`gatsby-core-utils`)\n    // Register watcher that rebuilds index.html every time html.js changes.\n    const watchGlobs = [`src/html.js`, `plugins/**/gatsby-ssr.js`].map(path =>\n      slash(directoryPath(path))\n    )\n\n    chokidar.watch(watchGlobs).on(`change`, async () => {\n      await createIndexHtml(indexHTMLActivity)\n      // eslint-disable-next-line no-unused-expressions\n      socket?.to(`clients`).emit(`reload`)\n    })\n  }\n\n  return {\n    compiler,\n    listener,\n    webpackActivity,\n    cancelDevJSNotice,\n    websocketManager,\n    workerPool,\n    webpackWatching: webpackDevMiddlewareInstance.context.watching,\n  }\n}\n"],"file":"start-server.js"}